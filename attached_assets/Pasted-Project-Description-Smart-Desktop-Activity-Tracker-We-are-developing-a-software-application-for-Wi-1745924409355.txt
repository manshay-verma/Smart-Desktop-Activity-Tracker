Project Description: Smart Desktop Activity Tracker

We are developing a software application for Windows that continuously monitors user activity and presents it in natural language. This software includes a wide range of features, which are described below:

Whenever the user performs a task—such as opening This PC, navigating to the C: drive, and launching a specific software—the application detects these actions and converts them into readable English sentences. For example:

"You opened 'This PC', navigated to the C: drive, and launched the software."

Additionally, we have created a floating sidebar using Qt that remains visible on the screen. This sidebar displays real-time text updates describing the user's actions.

Key Features:
Screen Capture & Mouse Tracking

Captures the screen every second.

Records the mouse click position to detect what file or application the user is interacting with.

Keyboard Logger

Records the text typed by the user to understand task content.

Text Analyzer

Captures two screenshots: one of the full screen and one cropped around the mouse pointer.

Extracts and analyzes the text from these images using OCR (Optical Character Recognition).

File Access Tracking

Analyzes screenshots to detect which files or applications are open.

Stores this information in both table format and as a JSON file.

Web Scraping for Tool Recognition

Uses Google Images and other sources to identify tools and applications detected in screenshots.

Floating Task Display (Qt-based)

A Qt-powered sidebar displays real-time user activity in natural language.

Automation Module

Detects patterns from internet searches and previously performed tasks.

Suggests next steps or flags errors.

Enables keyboard and mouse automation.

Repetitive Task Automation

Detects repetitive tasks and offers one-click automation.

Tracks mouse positions and keystrokes to replicate frequent tasks.

Repetitive Task Suggestions

Displays suggestions based on historical usage and timing patterns.

Recommends tasks at optimal times based on user behavior.

Machine Learning Integration

Analyzes collected data to detect patterns and improve suggestions using ML models.